xparser (Version 0.17.1)

***Warning: Environment variable FLAME_XPARSER_DIR not set - looking in current directory for Templates

Code type       : Serial
Input XMML file : more_sporos.xml
Model root dir  : 
Template dir    : 

Reading XMML file (more_sporos.xml)
- Model name     : More Spos
- Functions file : write_state.c
- Functions file : read_states.c
- Functions file : forcesLJ.c
- xagent   : Sporo
- Message  : state
End of XMML file

Creating dependency graph
Finished dependency loop check
Total communication sync lengths = 1
Ordering functions in process layers
New communication sync lengths = 1

Writing file : stategraph.dot
Writing file : stategraph_colour.dot
Writing file : process_order_graph.dot
Writing file : latex.tex

Generating Makefile using Makefile.tmpl
Generating xml.c using xml.tmpl
Generating main.c using main.tmpl
Generating header.h using header.tmpl
Generating memory.c using memory.tmpl
Generating low_primes.h using low_primes.tmpl
Generating messageboards.c using messageboards.tmpl
Generating partitioning.c using partitioning.tmpl
Generating timing.c using timing.tmpl
Generating Doxyfile using Doxyfile.tmpl
Generating rules.c using rules.tmpl

Writing header file : Sporo_agent_header.h

--- xparser finished ---

To compile and run the generated code, you will need:
 * libmboard (version 0.3.0 or newer)
gcc -c -I/net/data.isilon/ag-schwarz/bq_ppatra/Collective/libmboard_cluster/include  -O3 -std=c99 write_state.c -o write_state.o
gcc -c -I/net/data.isilon/ag-schwarz/bq_ppatra/Collective/libmboard_cluster/include  -O3 -std=c99 read_states.c -o read_states.o
gcc -c -I/net/data.isilon/ag-schwarz/bq_ppatra/Collective/libmboard_cluster/include  -O3 -std=c99 forcesLJ.c -o forcesLJ.o
gcc -c -I/net/data.isilon/ag-schwarz/bq_ppatra/Collective/libmboard_cluster/include  -O3 -std=c99 main.c -o main.o
gcc -c -I/net/data.isilon/ag-schwarz/bq_ppatra/Collective/libmboard_cluster/include  -O3 -std=c99 memory.c -o memory.o
gcc -c -I/net/data.isilon/ag-schwarz/bq_ppatra/Collective/libmboard_cluster/include  -O3 -std=c99 xml.c -o xml.o
gcc -c -I/net/data.isilon/ag-schwarz/bq_ppatra/Collective/libmboard_cluster/include  -O3 -std=c99 messageboards.c -o messageboards.o
gcc -c -I/net/data.isilon/ag-schwarz/bq_ppatra/Collective/libmboard_cluster/include  -O3 -std=c99 partitioning.c -o partitioning.o
gcc -c -I/net/data.isilon/ag-schwarz/bq_ppatra/Collective/libmboard_cluster/include  -O3 -std=c99 rules.c -o rules.o
gcc -c -I/net/data.isilon/ag-schwarz/bq_ppatra/Collective/libmboard_cluster/include  -O3 -std=c99 timing.c -o timing.o
gcc -L/net/data.isilon/ag-schwarz/bq_ppatra/Collective/libmboard_cluster/lib write_state.o read_states.o forcesLJ.o main.o memory.o xml.o messageboards.o partitioning.o rules.o timing.o -o main -lmboard_s  -lm
make: Nothing to be done for `all'.
FLAME Application: More Spos 
Iterations: 2000001
xml: Round-robin partitioning
Reading initial data file: 0.xml
Reading environment data from: 0.xml
Reading agent data from: 0.xml
output: type='snapshot' format='xml' location='/net/data.isilon/ag-schwarz/bq_ppatra/CollectiveNEW/KTH6KI005/Data1/' period='1000' phase='1'
xdiv=0 ydiv=1
